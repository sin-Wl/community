<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wenlei.community.dao.DiscussPostMapper">

    <sql id="selectFields">
        id,user_id,title,content,type,status,create_time,comment_count,score
    </sql>

    <sql id="insertFields">
        user_id,title,content,type,status,create_time,comment_count,score
    </sql>

    <select id="selectDiscussPosts" resultType="DiscussPost">
        select
        <include refid="selectFields"></include>
        from discuss_post
        where status != 2
        <if test="userId!=0">
            and user_id= #{userId}
        </if>
        order by type desc,create_time desc
        limit #{offset},#{limit}
    </select>

    <select id="selectDiscussPostRows" resultType="int">
        select count(id)
        from discuss_post
        where status !=2
        <if test="userId!=0">
            and user_id = #{userId}
        </if>
    </select>

    <insert id="insertDiscussPost" parameterType="DiscussPost" keyProperty="id">
        insert into discuss_post(<include refid="insertFields"></include>)
        values(#{userId},#{title},#{content},#{type},#{status},#{createTime},#{commentCount},#{score})
    </insert>

    <select id="selectDiscussPostById" resultType="DiscussPost">
        select
        <include refid="selectFields"></include>
        from discuss_post
        where id = #{id}
    </select>

    <update id="updateCommentCount">        <!--参数为普通数据类型，故不需要parameterType特意声明，返回值类型同理-->
        update discuss_post set comment_count = #{commentCount} where id = #{id}
    </update>

    <select id="selectReplyDiscussPosts" resultType="ReplyPostResult">
        select q.post_id,p.title as post_title,q.content as reply_content,q.create_time as reply_create_time
        from discuss_post as p
                 join
             (
                 select c.entity_id as post_id,c.content,c.create_time
                 from comment c
                          join
                      (
                          select entity_id,max(create_time) as max_create_time
                          from comment
                          where status = 0
                            and user_id = #{userId}
                            and entity_type = 1
                          group by entity_id
                          order by max_create_time desc
                          limit #{offset},#{limit}
                      ) as t
                      on c.entity_id = t.entity_id and c.create_time = t.max_create_time
                 where status = 0
                   and user_id = #{userId}
                   and entity_type = 1
             ) as q
             on q.post_id = p.id
        where p.status!=2
    </select>

</mapper>
